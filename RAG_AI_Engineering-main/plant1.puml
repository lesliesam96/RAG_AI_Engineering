@startuml
class MainApp {
    +st.session_state: Dict
    +file_path: str
    +selected_template: PromptTemplate
    +vector_db_creation(file)
    +process_csv(df)
    +initqachain(...)
}

class VectorStore {
    +documentchunks: List
    +embedmodel: str
    +embeddings: HuggingFaceEmbeddings
    +create_store()
    +as_retriever()
}

class Retriever {
    +bm25_retriever: BM25Retriever
    +ensemble_retriever: EnsembleRetriever
    +create_retriever()
}

class Loader {
    +temp_file_path: str
    +load_file(file)
}

class Agent {
    +model: LangChainInterface
    +custom_prompt: PromptTemplate
    +create_pandas_agent(df)
}

MainApp --> VectorStore : uses (Association)
MainApp ..> Loader : depends on (Dependency)
MainApp o-- Retriever : has (Aggregation)
VectorStore *-- Retriever : tightly coupled (Composition)
Agent --> VectorStore : accesses (Association)
Loader --> MainApp : returns data to (Association)
Retriever <|-- BM25Retriever : inherits (Inheritance)
Retriever <|-- EnsembleRetriever : inherits (Inheritance)

@enduml
